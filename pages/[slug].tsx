import type { NextPage } from 'next'
import { useRouter } from 'next/router'
import Head from 'next/head'
import { Header, Footer, SupplierRibbon } from '@/components/sections'
import { PageHeader } from '@/components/molecules'
import { Button } from '@/components/atoms'
import { PageLock } from '@/components/molecules/PageLock'
import { Common as CommonLayout } from '@/components/layouts'

import { getAllStaticPagesWithSlug, getStaticPage } from '../lib/graphql'

const Page: NextPage = ({ isServer, page }: any) => {
  const router = useRouter()
  console.log(`${router.pathname} - Is this page on the server? - ${isServer ? 'YES' : 'NO'}`)

  console.log(page)

  return (
    <>
      <Head>
        <title>{`${page?.title} - Tesla Owners UK` || `Tesla Owners UK`}</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <CommonLayout>
        <div className='container flex pt-[20px] pb-[24px]'>
          <PageHeader
            heading={page?.title}
            headingClassName='text-N-800 !font-600'
            // icon={<i className='ri-edit-box-line text-[40px] text-B-500' />}
          />
        </div>

        <div className='container flex flex-col'>
          <article className='prose mx-auto max-w-[782px] pt-[24px] md:pb-[80px]'>
            <div dangerouslySetInnerHTML={{ __html: page?.pageStatic?.content }} />
          </article>
        </div>
      </CommonLayout>
    </>
  )
}

export async function getStaticProps({ params, preview = false, previewData, req }: any) {
  const data = await getStaticPage(params.slug || '')

  return {
    props: {
      preview,
      page: data.staticPage,
      isServer: !!req,
    },
    revalidate: 10,
  }
}

export async function getStaticPaths({ req }: any) {
  const allPages = await getAllStaticPagesWithSlug()

  return {
    paths: allPages?.edges.map(({ node }: any) => `/${node.slug}`) || [],
    fallback: true,
  }
}

export default Page
