import { useEffect } from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import { Header, Footer, SupplierRibbon } from '@/components/sections'
import { ShopCategories } from '@/components/sections/ShopCategories'
import { useState } from 'react'
import { VehicleCard } from '@/components/molecules/VehicleCard'
import { modelS, model3 } from '@/dummy-data/vehicle-list'
import { ShopCard, PlaceholderProductCard } from '@/components/molecules'
import { Badge, Button } from '@/components/atoms'
import { ArrowRight } from 'react-feather'
import { Common as CommonLayout } from '@/components/layouts'
import { PageHeader, ContactCta, SectionHeading } from '@/components/molecules'

import { getProductCategories, getProducts } from '../../lib/graphql'
import Link from 'next/link'

const Page: NextPage = ({ categories, products }: any) => {
  const [activeProductsCategory, setActiveProductsCategory] = useState('accessories')
  const [filteredProducts, setFilteredProducts] = useState([])

  useEffect(() => {
    const prods = products?.filter((product: any, index: number) => {
      const { productCategories } = product
      if (
        productCategories?.nodes.filter((cat: any) => {
          return cat.slug === activeProductsCategory
        }).length > 0
      ) {
        return product
      }
    })

    setFilteredProducts(prods)
  }, [activeProductsCategory])

  const renderPlaceholders = () => {
    /* If length of products is lower than 4 then render placeholders to match 4 items */
    const placeholders = []
    if (filteredProducts?.length < 4) {
      for (let i = 0; i < 4 - filteredProducts?.length; i++) {
        placeholders.push(<PlaceholderProductCard key={i} />)
      }
    }
    return placeholders
  }

  return (
    <>
      <Head>
        <title>Shop - Tesla Owners UK</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.png' />
      </Head>

      <CommonLayout>
        <div className='container pt-[40px]'>
          <SectionHeading
            overline={'Tesla Owners UK'}
            heading={'Shop Products'}
            headingClassName='!text-h1 !mb-[16px]'
            description={`The Tesla Owners UK Directory showcases the best Tesla related products and services
            from across the UK.`}
            align='center'
            descriptionClassName='max-w-[490px] !text-md !font-500'
          />
        </div>

        <div className='flex pt-[60px] pb-[60px]'>
          <div className='container'>
            <div className='flex items-center justify-center gap-[8px]'>
              {categories?.map(({ name, slug, count }: any, index: number) => {
                if (count && count !== 0 && slug !== 'memberships') {
                  return (
                    <Button
                      key={index}
                      size='sm'
                      appearance={activeProductsCategory === slug ? 'primary' : 'default'}
                      onClick={() => {
                        setActiveProductsCategory(slug)
                      }}>
                      {name} <Badge appearance='brand'>{count}</Badge>
                    </Button>
                  )
                }
              })}
            </div>
          </div>
        </div>

        <div className='container pb-[80px]'>
          <div className='grid grid-cols-4 gap-[32px]'>
            {filteredProducts?.map((product: any, index: number) => {
              const { id, name, price, image, slug, stockQuantity } = product

              return (
                <Link key={id || index} href={`/shop/${slug}`}>
                  <a>
                    <ShopCard
                      key={id || index}
                      image={image?.mediaItemUrl || '/placeholder.png'}
                      heading={name}
                      price={price}
                      stockQuantity={stockQuantity}
                    />
                  </a>
                </Link>
              )
            })}

            {renderPlaceholders()}
          </div>
        </div>
      </CommonLayout>
    </>
  )
}

export async function getStaticProps({ params, preview = false, previewData }: any) {
  const categories = await getProductCategories()
  const products = await getProducts()

  return {
    props: {
      preview,
      categories: categories?.nodes,
      products: products?.nodes,
    },
    revalidate: 1,
  }
}

export default Page
