import type { NextPage } from 'next'
import Head from 'next/head'
import { Header, Footer, SupplierRibbon } from '@/components/sections'
import { ShopCategories } from '@/components/sections/ShopCategories'
import { useState } from 'react'
import { VehicleCard } from '@/components/molecules/VehicleCard'
import { modelS, model3 } from '@/dummy-data/vehicle-list'
import { ShopCard } from '@/components/molecules/ShopCard'
import { Badge, Button } from '@/components/atoms'
import { ArrowRight } from 'react-feather'
import { Common as CommonLayout } from '@/components/layouts'
import { PageHeader, ContactCta, SectionHeading } from '@/components/molecules'

import { getProductCategories, getProducts } from '../../lib/graphql'

const Page: NextPage = ({ categories, products }: any) => {
  const [activeProductsCategory, setActiveProductsCategory] = useState('all')
  console.log(products)

  return (
    <>
      <Head>
        <title>Tesla Owners UK</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.png' />
      </Head>

      <CommonLayout>
        <div className='container pt-[40px]'>
          <SectionHeading
            overline={'Tesla Owners UK'}
            heading={'Shop Products'}
            headingClassName='!text-h1 !mb-[16px]'
            description={`The Tesla Owners UK Directory showcases the best Tesla related products and services
            from across the UK.`}
            align='center'
            descriptionClassName='max-w-[490px] !text-md !font-500'
          />
        </div>

        <div className='flex pt-[80px] pb-[40px]'>
          <div className='container'>
            <div className='flex items-center justify-center gap-[8px]'>
              <Button
                appearance={activeProductsCategory === 'all' ? 'primary' : 'default'}
                onClick={() => {
                  setActiveProductsCategory('all')
                }}>
                All Products
              </Button>

              {categories?.map(({ name, slug, count }: any, index: number) => {
                if (!count || count === 0) {
                  return
                }

                return (
                  <Button
                    key={index}
                    appearance={activeProductsCategory === slug ? 'primary' : 'default'}
                    onClick={() => {
                      setActiveProductsCategory(slug)
                    }}>
                    {name} <Badge>{count}</Badge>
                  </Button>
                )
              })}
            </div>
          </div>
        </div>

        <div className='container pb-[80px]'>
          <div className='flex flex-wrap gap-[48px] pt-[40px]'>
            {products?.map(({ id, name, price, image, productCategories }: any, index: number) => {
              if (
                productCategories?.nodes.filter((cat: any) => cat.slug === activeProductsCategory)
                  .length > 0
              ) {
                return (
                  <ShopCard
                    key={id || index}
                    image={image?.mediaItemUrl || '/placeholder.png'}
                    heading={name}
                    price={price}
                    // shopName='Milton Keynes Team'
                  />
                )
              }

              if (activeProductsCategory === 'all') {
                return (
                  <ShopCard
                    key={id || index}
                    image={image?.mediaItemUrl || '/placeholder.png'}
                    heading={name}
                    price={price}
                    // shopName='Milton Keynes Team'
                  />
                )
              }
            })}
          </div>
        </div>
      </CommonLayout>
    </>
  )
}

export async function getStaticProps({ params, preview = false, previewData }: any) {
  const categories = await getProductCategories()
  const products = await getProducts()

  return {
    props: {
      preview,
      categories: categories?.nodes,
      products: products?.nodes,
    },
    revalidate: 1,
  }
}

export default Page
