import type { NextPage } from 'next'
import Head from 'next/head'

import { useRouter } from 'next/router'

import { ArrowLeft, Mail } from 'react-feather'
import { Button } from '@/components/atoms'
import { RegionDetailsHeader } from '@/components/molecules/RegionDetailsHeader'
import { SingleEventCard, ContactCta } from '@/components/molecules'
import { Common as CommonLayout } from '@/components/layouts'

import { getRegion, getAllRegionsWithSlug } from '../../lib/graphql'
import Link from 'next/link'
import CN from 'classnames'

const Page: NextPage = ({ region }: any) => {
  const router = useRouter()
  const { pageRegion } = region || {}

  return (
    <>
      <Head>
        <title>{`${region?.title || 'Region'}`} - Tesla Owners UK</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.png' />
      </Head>

      <CommonLayout className='pb-0'>
        <div className='header-surface relative h-[356px] bg-[url(/images/004.svg)] bg-cover bg-no-repeat'>
          <div className='container flex h-full flex-col'>
            <div className='flex py-[24px] lg:py-[50px]'>
              <Link href='/regions'>
                <Button
                  appearance='ghost'
                  iconBefore={<ArrowLeft size={20} />}
                  className='h-[unset] px-0 hover:text-B-500'>
                  Back to Regions list
                </Button>
              </Link>
            </div>
            <div className='top-[132px] lg:absolute'>
              <RegionDetailsHeader region={region} />
            </div>
          </div>
        </div>

        <div
          className={CN('container pt-[500px] pb-[24px] lg:pt-[400px]', {
            'md:pb-[80px]': pageRegion?.events?.length,
          })}>
          {pageRegion?.events?.length && (
            <>
              <div className='flex flex-col justify-between pb-[40px]'>
                <h4 className='text-h4 font-500 text-N-800'>Latest {region?.title} events</h4>
              </div>

              <ul className='flex flex-col gap-[24px] md:grid md:grid-cols-2 md:gap-y-[40px] md:gap-x-[24px] lg:grid lg:grid-cols-3 lg:gap-x-[48px]'>
                {(pageRegion?.events || []).map((event: any, index: number) => {
                  if (index > 3) {
                    return
                  }

                  return (
                    <li key={index}>
                      <Link href={`/events/${event?.slug}` || ''} passHref>
                        <a className='w-full'>
                          <SingleEventCard {...event} />
                        </a>
                      </Link>
                    </li>
                  )
                })}
              </ul>
            </>
          )}
        </div>

        <ContactCta
          id='contact'
          heading='Contact the <br />Regional Coordinator'
          icon={<Mail size={32} />}
          email='regions@teslaowners.org.uk'
        />
      </CommonLayout>
    </>
  )
}

export async function getStaticProps({ params, preview = false, previewData }: any) {
  const data = await getRegion(params.slug)

  return {
    props: {
      preview,
      region: data,
    },
    revalidate: 1,
  }
}

export async function getStaticPaths() {
  const allRegions = await getAllRegionsWithSlug()

  return {
    paths: allRegions?.nodes?.map(({ slug }: any) => `/regions/${slug}`) || [],
    fallback: true,
  }
}

export default Page
