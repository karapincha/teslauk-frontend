import type { NextPage } from 'next'
import Head from 'next/head'
import { Header, Footer, SupplierRibbon } from '@/components/sections'
import { useRouter } from 'next/router'
import { PageHeaderVariant } from '@/components/molecules/PageHeaderVariant'
import { Button } from '@/components/atoms'
import { InitiativeCard } from '@/components/molecules/InitiativeCard'
import { ChartLine, Facebook, LinkedIn } from '@/icons'
import { SectionHeading } from '@/components/molecules'
import discussionList, { discussionCardList } from '@/dummy-data/discussion-list'
import { DiscussionCard } from '@/components/molecules/DiscussionCard'

import { Common as CommonLayout } from '@/components/layouts'
import { getAllDiscussionGroupsWithSlug, getStaticPage } from '../../lib/graphql'

const Page: NextPage = ({ page, discussionGroups }: any) => {
  const router = useRouter()

  return (
    <>
      <Head>
        <title>Discussion Groups - Tesla Owners UK</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <CommonLayout>
        <div className='container flex pt-[20px]'>
          <PageHeaderVariant
            heading={page.title}
            image={page.staticPageHeader.banner.mediaItemUrl}
            description={page.staticPageHeader.description}
            imageClassName='!h-[205px] md:!h-[248px] lg:!h-[407px] w-full'
          />
        </div>

        <div className='container'>
          {/* Regions */}
          <div className='flex flex-col items-center gap-[40px] py-[40px] md:py-[80px] lg:flex-row lg:gap-[48px]'>
            {/* image */}
            <div className='h-[200px] w-full rounded-[8px] bg-[url("https://images.unsplash.com/photo-1589718539308-169369696599?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=765&q=80")] bg-cover bg-no-repeat lg:w-[576px]'>
              <div className='flex h-full flex-col justify-end rounded-b-[12px] bg-gradient-to-t from-[#000000DE] to-[#00000000] px-[28px] pb-[24px] md:flex-row md:items-end md:justify-between md:pb-[28px]'>
                <div className='flex flex-col gap-[4px]'>
                  <h3 className='text-h3 font-700 text-white'>Regions</h3>
                  <p className='text-base font-500 text-white'>Find local owners near to you</p>
                </div>
                <div className='flex pt-[24px] md:pt-0'>
                  <Button appearance='primary' size='md'>
                    Find in your location
                  </Button>
                </div>
              </div>
            </div>

            <div className='flex w-full lg:w-[576px]'>
              <p className='text-md text-N-600'>
                A major part of being a member of Tesla Owners UK is the ability to attend events –
                both National and Regional. From Track Days to Regional Meetups and visits to the
                Tesla facilities both in Europe and in the US we have you covered!
                <br /> <br />A major part of being a member of Tesla Owners UK is the ability to
                attend events – both National and Regional. From Track Days to Regional Meetups
              </p>
            </div>
          </div>
        </div>

        <div className='container pb-[40px] md:pb-[80px]'>
          {/* Discussion group section heading */}
          <SectionHeading
            overline='Official'
            heading='Facebook <br/> Discussion Groups'
            headingClassName='text-display !text-h3 lg:!text-h2 font-700 !mb-0'
            align='left'
          />

          {discussionGroups?.map((discussionGroup: any, index: number) => {
            if (discussionGroup?.pageDiscussionGroup?.ismaingroup) {
              return (
                <div className='flex w-full md:pt-[60px]' key={index}>
                  <DiscussionCard
                    size='lg'
                    isWide={true}
                    heading={discussionGroup?.title}
                    subHeading={discussionGroup?.pageDiscussionGroup?.excerpt}
                    category={
                      (discussionGroup?.pageDiscussionGroup?.ismaingroup && 'Main Group') || 'Group'
                    }
                    pillText={`${discussionGroup?.pageDiscussionGroup?.membersCount} members`}
                    list={discussionGroup?.pageDiscussionGroup?.features}
                    btnProps={{
                      children: 'Join the official group',
                      onClick: () => {
                        router.push(discussionGroup?.pageDiscussionGroup?.link)
                      },
                      appearance: 'secondary',
                      iconBefore: <Facebook size={20} />,
                    }}
                    cover={discussionGroup?.pageDiscussionGroup?.banner?.mediaItemUrl}
                  />
                </div>
              )
            }
          })}

          {/* All Discussion groups */}
          <div className='pt-[60px]'>
            <ul className='flex grid-cols-2 flex-col gap-[24px] md:grid md:gap-y-[40px] lg:gap-x-[48px]'>
              {discussionGroups?.map((discussionGroup: any, index: number) => {
                if (!discussionGroup?.pageDiscussionGroup?.ismaingroup) {
                  return (
                    <li key={index}>
                      <DiscussionCard
                        heading={discussionGroup?.title}
                        subHeading={discussionGroup?.pageDiscussionGroup?.excerpt}
                        pillText={`${discussionGroup?.pageDiscussionGroup?.membersCount} members`}
                        category={
                          discussionGroup?.pageDiscussionGroup?.visibility === 'public'
                            ? 'Public'
                            : 'Private'
                        }
                        cover={discussionGroup?.pageDiscussionGroup?.banner?.mediaItemUrl}
                        list={discussionGroup?.pageDiscussionGroup?.features}
                        btnProps={{
                          children: 'Join group',
                          onClick: () => {
                            router.push(discussionGroup?.pageDiscussionGroup?.link)
                          },
                          appearance: 'secondary',
                          iconBefore: <Facebook size={20} />,
                        }}
                      />
                    </li>
                  )
                }
              })}
            </ul>
          </div>
        </div>
      </CommonLayout>
    </>
  )
}

export async function getStaticProps({ preview = false, previewData }: any) {
  const data = await getStaticPage('discussion-groups')
  const discussionGroups = await getAllDiscussionGroupsWithSlug()

  return {
    props: {
      preview,
      page: data.staticPage,
      discussionGroups,
    },
    revalidate: 10,
  }
}

export default Page
