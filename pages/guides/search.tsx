import { useState, useEffect } from 'react'
import type { NextPage } from 'next'
import { useRouter } from 'next/router'
import Head from 'next/head'
import Link from 'next/link'
import { Header, Footer, SupplierRibbon } from '@/components/sections'
import { PageHeader, ArticleCard, Pagination } from '@/components/molecules'
import { Common as CommonLayout } from '@/components/layouts'
import { getAllGuidesByCategories, getTotals, SEARCH_GUIDES } from '../../lib/graphql'
import { useQuery, gql } from '@apollo/client'

const Page: NextPage = ({ totals }: any) => {
  const router = useRouter()
  const removeQuotes = (str: any) => {
    return str.replace(/['"]+/g, '')
  }
  const [searchString, setSearchString] = useState(router.query.q || '')
  const [searchResult, setSearchResult] = useState([])

  const {
    data: result,
    loading,
    error,
    refetch,
  } = useQuery(SEARCH_GUIDES, {
    variables: { search: searchString || '' },
  })

  useEffect(() => {
    setSearchResult(result?.guides?.nodes)
  }, [result])

  console.log(totals?.guides?.pageInfo?.total)

  return (
    <>
      <Head>
        <title>Guides Search - Tesla Owners UK</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.png' />
      </Head>

      <CommonLayout>
        <div className='container flex'>
          <PageHeader
            hasSearch
            heading={`Guides Search: ${router.query.q}`}
            description={`Search through over ${totals?.guides?.pageInfo?.total} guides`}
            btnProps={{
              onClick: (e: any) => {
                e.preventDefault()
                router.push(`/guides/search/?q="${searchString}"`)
              },
              children: 'Search',
              appearance: 'primary',
            }}
            inputProps={{
              onChange: (e: any) => {
                setSearchString(e.target.value)
                router.push({ query: { q: e.target.value } })
              },
              placeholder: 'Search a guide',
              value: removeQuotes(searchString),
              size: 'lg',
            }}
          />
        </div>

        <div className='container flex flex-col py-[80px]'>
          <div className='mx-auto flex w-full max-w-[784px] flex-col'>
            <div className='mb-[48px] text-h5 text-N-700'>
              Results <span className='font-500 text-N-800'>1-10</span> of{' '}
              <span className='font-500 text-N-800'>57</span> search results for{' '}
              <span className='font-500 text-B-500'>“Tesla”</span>
            </div>

            <div className='flex flex-col gap-[32px]'>
              {(searchResult || []).map((item: any, index: number) => {
                return (
                  <ArticleCard
                    title={item?.title}
                    key={index}
                    link={`/guides/${item?.slug}`}
                    excerpt={item?.pageGuide?.excerpt}
                    thumbnail={item?.pageGuide?.thumbnail?.mediaItemUrl}
                  />
                )
              })}
            </div>
          </div>

          <div className='mx-auto w-full max-w-[784px] pt-[40px]'>
            <Pagination />
          </div>
        </div>
      </CommonLayout>
    </>
  )
}

export async function getStaticProps({ preview = false, previewData }: any) {
  const data = await getTotals()

  return {
    props: {
      preview,
      totals: data,
    },
    revalidate: 10,
  }
}

export default Page
