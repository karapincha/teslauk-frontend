import CN from 'classnames'
import Link from 'next/link'
import type { NextPage } from 'next'
import Head from 'next/head'
import { Header, Footer, SupplierRibbon } from '@/components/sections'
import { useRouter } from 'next/router'
import { Button } from '@/components/atoms'
import { MemberCard } from '@/components/molecules/MemberCard'
import { ArrowRightCircle } from 'react-feather'
import { DashboardMenu } from '@/components/molecules/DashboardMenu'
import { useViewport } from '@/utils'

const Home: NextPage = () => {
  const router = useRouter()
  const { isDesktop, isMobile, isTablet } = useViewport()

  const recentOrdersList = [
    {
      id: '0',
      orderNumber: '#39155',
      label: 'Pending payment',
      url: '#',
      date: '21/10/2021',
      itemsCount: '1',
      price: '£35',
      isCompleted: false,
      isPending: true,
    },
    {
      id: '1',
      orderNumber: '#39155',
      label: 'Delivered',
      url: '#',
      itemsCount: '1',
      price: '£35',
      date: '21/10/2021',
      isCompleted: false,
      isPending: false,
    },
    {
      id: '2',
      orderNumber: '#39155',
      label: 'Order completed',
      url: '#',
      itemsCount: '1',
      price: '£35',
      date: '21/10/2021',
      isCompleted: true,
      isPending: false,
    },
    {
      id: '3',
      orderNumber: '#39155',
      label: 'Order completed',
      url: '#',
      itemsCount: '1',
      price: '£35',
      date: '21/10/2021',
      isCompleted: true,
      isPending: false,
    },
    {
      id: '4',
      orderNumber: '#39155',
      label: 'Order completed',
      url: '#',
      itemsCount: '1',
      price: '£35',
      date: '21/10/2021',
      isCompleted: true,
      isPending: false,
    },
    {
      id: '5',
      orderNumber: '#39155',
      label: 'Order completed',
      url: '#',
      itemsCount: '1',
      price: '£35',
      date: '21/10/2021',
      isCompleted: true,
      isPending: false,
    },
    {
      id: '6',
      orderNumber: '#39155',
      label: 'Order completed',
      url: '#',
      itemsCount: '1',
      price: '£35',
      date: '21/10/2021',
      isCompleted: true,
      isPending: false,
    },
    {
      id: '7',
      orderNumber: '#39155',
      label: 'Order completed',
      url: '#',
      itemsCount: '1',
      price: '£35',
      date: '21/10/2021',
      isCompleted: true,
      isPending: false,
    },
    {
      id: '8',
      orderNumber: '#39155',
      label: 'Order completed',
      url: '#',
      itemsCount: '1',
      price: '£35',
      date: '21/10/2021',
      isCompleted: true,
      isPending: false,
    },
  ]

  return (
    <>
      <Head>
        <title>Karapincha UI</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Header className='py-[24px]' />

      <div className='container flex gap-[48px] pt-[40px] pb-[40px] md:pb-[80px] lg:pb-[80px]'>
        <div className='dashboard-menu hidden lg:flex'>
          <div className='w-full'>
            <DashboardMenu />
          </div>
        </div>

        <div className='flex w-full flex-col'>
          <h4 className='pb-[24px] text-h4 font-600 text-N-800'>Purchases</h4>
          <div className='flex gap-[12px] border-b-[1px]'>
            <Link href='#'>
              <Button
                className='mb-[16px] h-0 px-0 py-0 text-base font-600'
                isActive
                appearance='ghost'>
                Orders
              </Button>
            </Link>
            <Link href='#'>
              <Button className='mb-[16px] h-0 px-0 py-0 text-base font-600' appearance='ghost'>
                Booking
              </Button>
            </Link>
          </div>

          <div className='scrollbar-py-[12px] scrollbar-track-rounded-full scrollbar-thumb-rounded-full w-full overflow-auto overflow-y-scroll pt-[24px]  scrollbar-thin scrollbar-track-N-100 scrollbar-thumb-N-300 md:pt-[24px] lg:pt-[16px]'>
            <div className='flex w-[1000px] flex-col gap-[16px] overflow-auto md:w-[960px] lg:w-[unset]'>
              <div className='grid grid-cols-[1.5fr_2fr_4fr_3fr_2fr_3fr] gap-[16px] bg-N-50 py-[4px] pl-[8px] text-md text-N-600'>
                <div>Order ID</div>
                <div>Date</div>
                <div>Status</div>
                <div>No. of items</div>
                <div>Total</div>
                <div>Actions</div>
              </div>
            </div>
            <div>
              <ul className='flex w-[1000px] flex-col gap-[16px] overflow-auto md:w-[960px] lg:w-[unset]'>
                {recentOrdersList.map(
                  (
                    {
                      id,
                      orderNumber,
                      url,
                      label,
                      itemsCount,
                      price,
                      date,
                      isCompleted,
                      isPending,
                    },
                    index
                  ) => (
                    <li
                      key={id || index}
                      className='grid grid-cols-[1.5fr_2fr_4fr_3fr_2fr_3fr] gap-[16px] pl-[8px]'>
                      <span className='text-base text-N-800'>{orderNumber}</span>
                      <p className='text-base font-400 text-N-600'>{date}</p>
                      <p
                        className={CN(`text-base font-400`, {
                          'text-N-800': !isCompleted,
                          'text-G-500': isCompleted,
                        })}>
                        {label}
                      </p>
                      <p>{itemsCount}</p>
                      <p>{price}</p>
                      <div className='flex gap-[16px]'>
                        <a
                          target='_blank'
                          href={url}
                          className='font-600 text-N-800 hover:text-B-500'>
                          View
                        </a>
                        <a
                          target='_blank'
                          href={url}
                          className={CN(`text-base font-600`, {
                            'hidden': !isPending,
                            'text-B-500 hover:text-B-600': isPending,
                          })}>
                          Pay
                        </a>
                      </div>
                    </li>
                  )
                )}
              </ul>
            </div>
          </div>
          <div className='pt-[24px] md:pt-[16px] lg:pt-[16px]'>
            <Link href='#'>
              <Button iconAfter={<i className='ri-arrow-right-line text-lg' />} appearance='link'>
                Load more
              </Button>
            </Link>
          </div>
        </div>
      </div>

      <SupplierRibbon className='border-t border-N-100' />
      <Footer />
    </>
  )
}

export default Home
